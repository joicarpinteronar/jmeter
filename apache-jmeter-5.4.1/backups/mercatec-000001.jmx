<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="4.0">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="mercatec" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.0.20. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;96&quot;, &quot;Google Chrome&quot;;v=&quot;96&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">play.google.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">meet.google.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">mercatec.com.co</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager">
        <collectionProp name="AuthManager.auth_list"/>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://play.google.com/log?format=json&amp;hasfast=true&amp;authuser=0" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="hasfast" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasfast</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="authuser" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">authuser</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="&#x1f;&#x8b;&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x3;í&#x97;Ûr&#x9b;0&#x10;&#x86;ßE×&#x10;ë&#x0;Bºk&#x9d;¦n&#x9a;IÚ8õtZÁ0&#x2;Ë@&#x86;&#x93;Á" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">&#x1f;&#x8b;&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x3;í&#x97;Ûr&#x9b;0&#x10;&#x86;ßE×&#x10;ë&#x0;Bºk&#x9d;¦n&#x9a;IÚ8õtZÁ0&#x2;Ë@&#x86;&#x93;Á</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="M&#x9e;¾²k&#x1b;×" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">M&#x9e;¾²k&#x1b;×</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="éYXdëy.&#x8;&#x11;µ-J¨®&#x2;â&#x98;Q&#x82;&#x99;Mý&#x9b;ë»&#x9d;Pá}cV&#x8f;EfÊX" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">éYXdëy.&#x8;&#x11;µ-J¨®&#x2;â&#x98;Q&#x82;&#x99;Mý&#x9b;ë»&#x9d;Pá}cV&#x8f;EfÊX</stringProp>
                  <stringProp name="Argument.value">w&#x8;&#x17;t&#x17;p·oÿØ¸Ç&#x90;ànzî&#x19;B&#x17;&#x0;¾&#x94;¥F SãDúµªë¤Èë^(Ó´TÕD&#x87;B&#x1a;)&#xc;¡·¸V1Ö0mujkÏ½Bi&#x19;X&#x98;ê@È`&#x9e;·]û6¹Ö &#x6;á&#x9e;s½-±);Ð&#x87;E&#x86;&apos;üOøohØÊï0´Ý&#x7;Ók&#x84;`&#x16;4Z¦t1µ&#x93;YÈø&#x8d;3íC&#xe;á{&#x13;&#x91;³³&#x1a;/&#x18;%ä&#x8f;dÒe^&#x92;	?Éä$&#x93;×&#x95;	é&#x90;&#x89;µ#&#x93;W&#x81;ßé&#x1e;Û&#x87;ß&#x86;Øæø&#x4;ÿ&#x7f;&#xd;¿p&#x18;¤«WÝº (£l&#x9c;&#x97;aPÄq&#x99;O¢4*â4&#x88;&apos;E&#x1e;É qÁßÿ&#xc;j&#x13;8&#x1e;ñ&#x3;¿&#x16;ËÍ[Äµî&#x18;x&#x8e;î.&#x3;½&#x9f;°Y¾¸º&#xc;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="&#x8e;;Óæ¦æb&#x81;&#x95;´Zí~ÿ&#xc;&#x8;&#x81;&#x8c;|&#x9e;¦G&#x1b;Ñ&gt;&#x92;_7 j``&#x3;&#x4;ÅÔÏ&#x94;&#x9a;%yTÏ&#x93;ZU&#x8d;ª|&#xc;1B&#x18;£3Hý&#x12;&#x2;Ï3lh&#x8;&#x1;&#x10;µ CÜâ&#x9c;3&#x7;¬B{&#x9d;;&#x2;!&#x84;»&#x8c;&#x1e;§2Wç&#x17;ä&#x82;cøÎ&#x5;&#x86;&#xb;®ß¾¿:&#x9f;öç£Ëüû&#x7;{ð0üø°ôgæ#ê÷?5Åd6ÿr7&#x8d;&#x87;&#x84;&#x96;ß®.o&#x97;&#x83;u)CU÷Ò§&#x1f;_&apos;&#x9f;&#x87;7&#x83;fÔï&#x8d;U&#x93;,&#x9c;&#x1;&#x93;LÊ@&#x99;c&#x84;lÓr&#x88;4&#x19;ÁÜd&#xe;´%¡P&#x85;&#x12;.&#x83;lòñë§~3KÕHò&#x81;&#xb;¶òvÁ}&#x91;&#x84;²*&#x93;|¦ª&quot;&#x97;o¢L" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">&#x8e;;Óæ¦æb&#x81;&#x95;´Zí~ÿ&#xc;&#x8;&#x81;&#x8c;|&#x9e;¦G&#x1b;Ñ&gt;&#x92;_7 j``&#x3;&#x4;ÅÔÏ&#x94;&#x9a;%yTÏ&#x93;ZU&#x8d;ª|&#xc;1B&#x18;£3Hý&#x12;&#x2;Ï3lh&#x8;&#x1;&#x10;µ CÜâ&#x9c;3&#x7;¬B{&#x9d;;&#x2;!&#x84;»&#x8c;&#x1e;§2Wç&#x17;ä&#x82;cøÎ&#x5;&#x86;&#xb;®ß¾¿:&#x9f;öç£Ëüû&#x7;{ð0üø°ôgæ#ê÷?5Åd6ÿr7&#x8d;&#x87;&#x84;&#x96;ß®.o&#x97;&#x83;u)CU÷Ò§&#x1f;_&apos;&#x9f;&#x87;7&#x83;fÔï&#x8d;U&#x93;,&#x9c;&#x1;&#x93;LÊ@&#x99;c&#x84;lÓr&#x88;4&#x19;ÁÜd&#xe;´%¡P&#x85;&#x12;.&#x83;lòñë§~3KÕHò&#x81;&#xb;¶òvÁ}&#x91;&#x84;²*&#x93;|¦ª&quot;&#x97;o¢L</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">log</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">SAPISIDHASH 0d557ab17582c71be6130bd2fd58f9fb8227fc78</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/binary</stringProp>
                </elementProp>
                <elementProp name="X-Goog-AuthUser" elementType="Header">
                  <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://meet.google.com/$rpc/google.rtc.meetings.v1.MeetingSpaceService/SyncMeetingSpaceCollections" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">
&#x13;spaces/lzxWfPRNGvUB&#x12;&#x4;
&#x2;&#x8;,&#x1a;&#x4;
&#x2;&#x8;-&quot;&#x4;
&#x2;&#x8;-J&#x4;
&#x2;&#x8;*R&#x4;
&#x2;&#x8;*Z&#x2;
&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">$rpc/google.rtc.meetings.v1.MeetingSpaceService/SyncMeetingSpaceCollections</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-goog-encode-response-if-executable" elementType="Header">
                  <stringProp name="Header.name">x-goog-encode-response-if-executable</stringProp>
                  <stringProp name="Header.value">base64</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">SAPISIDHASH 1640819510_043a347c2e0188c3291e001fa2e14f00c72fb70f</stringProp>
                </elementProp>
                <elementProp name="x-compass-routing-destination" elementType="Header">
                  <stringProp name="Header.name">x-compass-routing-destination</stringProp>
                  <stringProp name="Header.value">AHSoBRXjcVMIzHpLB76dD_fcDHkpyWqo9vazw9eqWQdV2D-VnROEvD-4pI2CTZS0AOAxlEh0n3umc2AiCL9VsPGhVkcwkrY7LaFas69Lt2YsjQ==</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-protobuf</stringProp>
                </elementProp>
                <elementProp name="x-goog-meeting-rtcclient" elementType="Header">
                  <stringProp name="Header.name">x-goog-meeting-rtcclient</stringProp>
                  <stringProp name="Header.value">CAEQqgMYASABKAg=</stringProp>
                </elementProp>
                <elementProp name="x-goog-meeting-token" elementType="Header">
                  <stringProp name="Header.name">x-goog-meeting-token</stringProp>
                  <stringProp name="Header.value">1640819490023;AOIzluBfsKQlR9eUSDoAwIgAlMXxvo-RaMytzKaPYA5alYoUl0JnKDM1DuCpxBX9AJ19qVCC2UmFfMp-_W29drq5eR8gEhlQfzjdGbu8ZdliPSkI5EZc6kRoXktIBblcNhwkSGqpBhrtnANBWfxnKgMmr8O9Y9_mRJnLX67HiOaMdrdIO0vk7MTPA6KzwipLCPtcsItcSDNK</stringProp>
                </elementProp>
                <elementProp name="x-goog-api-key" elementType="Header">
                  <stringProp name="Header.name">x-goog-api-key</stringProp>
                  <stringProp name="Header.value">AIzaSyCG_6Rm6c7ucLr2NwAq33-vluCp2VfSkf0</stringProp>
                </elementProp>
                <elementProp name="x-goog-authuser" elementType="Header">
                  <stringProp name="Header.name">x-goog-authuser</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="x-goog-meeting-debugid" elementType="Header">
                  <stringProp name="Header.name">x-goog-meeting-debugid</stringProp>
                  <stringProp name="Header.value">boq_hlane_szBvtleUa9G</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://meet.google.com/hangouts/v1_meetings/media_sessions/callperf?key=AIzaSyCG_6Rm6c7ucLr2NwAq33-vluCp2VfSkf0&amp;alt=proto" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="alt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alt</stringProp>
                  <stringProp name="Argument.value">proto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyCG_6Rm6c7ucLr2NwAq33-vluCp2VfSkf0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name=" k&#x85;Ëpr&gt;Û&#x17;&#x9f;&#x8b;ªüÿGB¼&#x90;¤&#x81;ª&#xa;ç?Á&#x81;$Nâ$&#x84;H&#x95;&#xe;JR&#x8f;þ&#x99;×&#x90;Ô¥kç¶Ú&#x16;2©Ké²yTcf0&#x91;&#x15;¢!¶!þ&#x8c;á&#x82;&#x90;ÒuC&#x8c;®S&#x8;êº;&#x3;µYé4è&apos;Ýwß÷û¾ï½&#x9f;?¿{ïQe&#x14;&quot;mÙ«©,&#x97;¿¿Ã×-õz ª,U&quot;ÏU&#x16;æ|&#x1;u&#x4;FË&#x87;&#x7;»½­&#x92;XS&#x88;¼&#x1;&#x7;MBf&#x6;c¡&#x1;&#x1a;Éì&#x87;&#x1a;Ëª×Uô&#x97;&#xf;µÖõnªµÕlo®ß®&#x7f;ce6ÛcÚa./o&#x1a;öw&#xe;&#xe;µlè÷5[&#x84;¾&#x8d;ëê¾" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name"> k&#x85;Ëpr&gt;Û&#x17;&#x9f;&#x8b;ªüÿGB¼&#x90;¤&#x81;ª
ç?Á&#x81;$Nâ$&#x84;H&#x95;&#xe;JR&#x8f;þ&#x99;×&#x90;Ô¥kç¶Ú&#x16;2©Ké²yTcf0&#x91;&#x15;¢!¶!þ&#x8c;á&#x82;&#x90;ÒuC&#x8c;®S&#x8;êº;&#x3;µYé4è&apos;Ýwß÷û¾ï½&#x9f;?¿{ïQe&#x14;&quot;mÙ«©,&#x97;¿¿Ã×-õz ª,U&quot;ÏU&#x16;æ|&#x1;u&#x4;FË&#x87;&#x7;»½­&#x92;XS&#x88;¼&#x1;&#x7;MBf&#x6;c¡&#x1;&#x1a;Éì&#x87;&#x1a;Ëª×Uô&#x97;&#xf;µÖõnªµÕlo®ß®&#x7f;ce6ÛcÚa./o&#x1a;öw&#xe;&#xe;µlè÷5[&#x84;¾&#x8d;ëê¾</stringProp>
                  <stringProp name="Argument.value">pï&#x91;g`®Û,Ø¬&#x82;E&#x10;í%f&#x91;·&#xb;&#x16;Þn&#x13;:Ö7nø&#xd;,&#xd;ôIno ¸{täÉNgóú&#x9a;áÖòb&#x8f;w¸K&#x5;]vÉ.I.¯Éc6ÛLÖ&#x12;&#x8b;d²[xÑd/ál&#x92;Eà¼n&#x89;Ó&#x7f;í&#x11;
÷® îõc³&#x9f;xÒë1TzÝ&#x6;^4ð&#x1c;o6&#x98;K&#x1c;fÎ¡&#x18;5&#x8d;-</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="&#x11;Õa.&#x7;S&#x10;Õa&#x8e;&#x87;R&#x10;ÕaÞ&#xb;§ ªÃ¼&#x16;IAT&#x87;yv:&#x5;Q&#x1d;æã&#x9f;¦ ªÃüá&#x17;·&#x91;Ô" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">&#x11;Õa.&#x7;S&#x10;Õa&#x8e;&#x87;R&#x10;ÕaÞ&#xb;§ ªÃ¼&#x16;IAT&#x87;yv:&#x5;Q&#x1d;æã&#x9f;¦ ªÃüá&#x17;·&#x91;Ô</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GIÃ&#x95;}Bw&#x2;îÒ¥&#x93;&apos; 3&#x8e;Ø³ÐÀ&#x18;éyò&#xd;ïb&#x16;X;&#x1;Ã&#x10;F v&#x1a;&gt;&lt;&#x9b;y&#x8c;&#x8e;*O,&#x13;&#x9e;¢i&#x96;}ø&#x8e;ÌÂÓ&#x97;&apos;µQø&#xe;&#x1d;&apos;&#x9e;&#xf;Q&#x8b;&#x4;&#x88;Á7#Ç¿9&#xf;#{à)h¥Ö&lt;ÅÛ9Îáå&#x1d;VÉÎ)&#x7;&#x80;Ëê(q&#xb;n&#x87;(X&#x1d;6¯&#x82;&#x97;H&#x82;ýi&#x87;M&#x14;-&#x1c;&#x3;ÕÓó&#x1c;|&#x84;Ê&#x7f;&#x8a;ç8³Ãj&#x17;8UY&#x1d;&#x82;Ãaq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">GIÃ&#x95;}Bw&#x2;îÒ¥&#x93;&apos; 3&#x8e;Ø³ÐÀ&#x18;éyò&#xd;ïb&#x16;X;&#x1;Ã&#x10;F v&#x1a;&gt;&lt;&#x9b;y&#x8c;&#x8e;*O,&#x13;&#x9e;¢i&#x96;}ø&#x8e;ÌÂÓ&#x97;&apos;µQø&#xe;&#x1d;&apos;&#x9e;&#xf;Q&#x8b;&#x4;&#x88;Á7#Ç¿9&#xf;#{à)h¥Ö&lt;ÅÛ9Îáå&#x1d;VÉÎ)&#x7;&#x80;Ëê(q&#xb;n&#x87;(X&#x1d;6¯&#x82;&#x97;H&#x82;ýi&#x87;M&#x14;-&#x1c;&#x3;ÕÓó&#x1c;|&#x84;Ê&#x7f;&#x8a;ç8³Ãj&#x17;8UY&#x1d;&#x82;Ãaq</stringProp>
                  <stringProp name="Argument.value">í0 Y¶[ió&#x1a;´&#x17;ÞæHLCýlæ^&#x18;U&#x9e;&#x4;G¤Ï&#x9d;&#x85; &#x9a;²ñÄ	&#x90;`&#x7;æSÀSÐF&#x99;îÁÐåîìtH&#x1e;&#x9b;Åá&#x12;Ì&#x16;Gg§&#x97;»EÑüu(æÎfN)&#x14;§R(îÖÝÍQ&#x9b;à¸&#x90;}7É&#x2;*Ç,rE¼&#x95; 2&#xb;&#x82;òæ&#x13;dxe&#x16; &#x92;É§V&#x98;­|&#x11;oã&#x8a;ì|&#x91;&#x99;&#x17;¿D&quot;&#x8a;V&#x6;	&#x10;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="¤&#x81;ÊZ&#x97;I&#x99;x&#x9;&#x9e;#ÓH&#x91;ù&#x14;²SÐPf¤w&#x91;&#x14;©a&#x9e;`iC&#x96;&#x91;þ@G&#x91;&#x4;SÅ®0d&#x1b;é" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">¤&#x81;ÊZ&#x97;I&#x99;x	&#x9e;#ÓH&#x91;ù&#x14;²SÐPf¤w&#x91;&#x14;©a&#x9e;`iC&#x96;&#x91;þ@G&#x91;&#x4;SÅ®0d&#x1b;é</stringProp>
                  <stringProp name="Argument.value">J&#x4;2&#x88;EÊ^I&#x9f;R&quot;Z</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="&#x8b;&#x9a;3&#x94;%&#x86;³á©w¡áú¹£pI&#x3;d\:£&#x93;cÓyq&#x9d;üÛ&#xb;9Ëº&lt;&#x92;d&#xe;Cö04&#x0;ã¡" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">&#x8b;&#x9a;3&#x94;%&#x86;³á©w¡áú¹£pI&#x3;d\:£&#x93;cÓyq&#x9d;üÛ&#xb;9Ëº&lt;&#x92;d&#xe;Cö04&#x0;ã¡</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_Ð&#x0;E&gt;%T" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_Ð&#x0;E&gt;%T</stringProp>
                  <stringProp name="Argument.value">&#x97;®ê&#x17;µª&#x9e;LèÏ&#x12;øë&#x94;ªß¢Ö&#x80;û&#x90;&#x83;é÷&#x95;&gt;C­Ü	/?zñ&#x99;?×&#x1d;&#x13;÷¯ZB?Ð}¶úù²¹ª8&#x5;¾C[&#x14;	ìl.&#xb;ÑòÔ~ã&quot;&#x5;®Qï/ÐKTä¥&#x85;&#x96;&#x18;&#xe;æñ&#x17;O¬&lt;&#x89;&#x1f;&#x1d;§Îàã0&#x8e;&#x8f;&#x1d;J[Ä&#xf;&#x11;&#x8b;ä¯&#x88;ÄB&#x7;Î&#x7;ß&#xd;¦ö]×&#x7;áá·1eÑ(ßæ&#x18;Rw§ÄâÆÃh.=&#x82;ði&#x84;Ï&quot;|&#x1;ûÜ&#x18;)ýSBG&#x89;&#x9b;»&#x89;&#x19;BYîö&#x3;:¢»Ë5Ü7r&#x5;S&#xb;e&#x8d;&#x9c;&#x16;ÔÄ&#x89;y­&#x8c;&#x9f;Ô.¢Yª0¦Í&#xc;é¾÷;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="°&#x18;&#x9a;&#x80;ó&#x88;\Îè &#x1;óËÅ&#x2;öû/&#x1f;&#x85;&#x85;&#x84;â(Géêtò:ÆÜüù7Ø¿&#x87;å«&#x90;Ï å\æ×&#x87;&#x8e;@6úû&#x93;K´ãvZùíw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">°&#x18;&#x9a;&#x80;ó&#x88;\Îè &#x1;óËÅ&#x2;öû/&#x1f;&#x85;&#x85;&#x84;â(Géêtò:ÆÜüù7Ø¿&#x87;å«&#x90;Ï å\æ×&#x87;&#x8e;@6úû&#x93;K´ãvZùíw</stringProp>
                  <stringProp name="Argument.value">MNæ2W?Aì&#x8f;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ÎÆq&#x6;£Ï? &#x19;¼&#x81;Á#oöz¤&#x1;&#x83;Çk¨ðwû{\]ÒcÓäÎñåÃñbö£üoqÿÊ&#x8f;RØlÖ_P4ëm&#x14;¦ÁË&#x19;EéE&#x17;Ú0&#x6;°@i7&#x1c;&#x1;&#x1c;°&#x83;Ò&#x17;rú^È©&#x5;2&#x4;NÐ.Ëÿ~®t3ðÉ×&#x16;¾K?^&#x8a;j?¿#Ð&#x99;4Û&#x93;ææ¤éK&#x9a;}Is$iÊ0i&#x7;Sì%&#x88;&#x96;Pèlº&#x8c;&#x81; &#x6;B&#x18;&#x8;&#x93;ñO²&quot;$&#x88;â ¦&#x1;k&#x1f;/&#x85;µÀ&#x89;Rg&#x85;¾ü&#xf;h:¿@&#x9f;§ÏËW¥oaì&#x1d;|äÆ9â«&apos;&#x1;K4&#x92;ÓÒÆPþ¥&#x2;&gt;&#x88;Z÷é2ÈjF&#x9;±&#x8b;zÃd&#x83;&#x91;&#xe;bÇ&apos;á&gt;Lãï&#x1b;&#xa;D±&#x15;1&#xc;í¢2ßû8ç|á&#xd;Í&#x4;¬&#x14;&#xb;&#x95;Ö&#x5;)m&#x88;zîøkGà&#x15;L&#x1d;&apos;¦MN&#x11;Ò&#x80;&#x8;­Ò½«mà+º&#x95;§ü&#x80;¼¤ô&#x81;&#x11;ð?¹C9&#xd;&#x8e;¡ù«Y¾&#x10;&#x2;×t &#x8c;@&#x4;&#x81;i¤öl&#x1f;&#x86;µ9Å&#x3;:íPï¶^ÿöÞ+&#x98;&#x9a;&apos;k@P&#x3;æµ1tRû3øe¦1&#x8d;&#x1c;!g&#x9;p.&#xd;&#x91; &#x84;&#x83;0~§×&#x9a;TÎØÿñÇ&#x1e;&gt;ñ®" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ÎÆq&#x6;£Ï? &#x19;¼&#x81;Á#oöz¤&#x1;&#x83;Çk¨ðwû{\]ÒcÓäÎñåÃñbö£üoqÿÊ&#x8f;RØlÖ_P4ëm&#x14;¦ÁË&#x19;EéE&#x17;Ú0&#x6;°@i7&#x1c;&#x1;&#x1c;°&#x83;Ò&#x17;rú^È©&#x5;2&#x4;NÐ.Ëÿ~®t3ðÉ×&#x16;¾K?^&#x8a;j?¿#Ð&#x99;4Û&#x93;ææ¤éK&#x9a;}Is$iÊ0i&#x7;Sì%&#x88;&#x96;Pèlº&#x8c;&#x81; &#x6;B&#x18;&#x8;&#x93;ñO²&quot;$&#x88;â ¦&#x1;k&#x1f;/&#x85;µÀ&#x89;Rg&#x85;¾ü&#xf;h:¿@&#x9f;§ÏËW¥oaì&#x1d;|äÆ9â«&apos;&#x1;K4&#x92;ÓÒÆPþ¥&#x2;&gt;&#x88;Z÷é2ÈjF	±&#x8b;zÃd&#x83;&#x91;&#xe;bÇ&apos;á&gt;Lãï&#x1b;
D±&#x15;1&#xc;í¢2ßû8ç|á&#xd;Í&#x4;¬&#x14;&#xb;&#x95;Ö&#x5;)m&#x88;zîøkGà&#x15;L&#x1d;&apos;¦MN&#x11;Ò&#x80;&#x8;­Ò½«mà+º&#x95;§ü&#x80;¼¤ô&#x81;&#x11;ð?¹C9&#xd;&#x8e;¡ù«Y¾&#x10;&#x2;×t &#x8c;@&#x4;&#x81;i¤öl&#x1f;&#x86;µ9Å&#x3;:íPï¶^ÿöÞ+&#x98;&#x9a;&apos;k@P&#x3;æµ1tRû3øe¦1&#x8d;&#x1c;!g	p.&#xd;&#x91; &#x84;&#x83;0~§×&#x9a;TÎØÿñÇ&#x1e;&gt;ñ®</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="&#x8;_&#x99;Å&#x97; B&#x92;Ò&#x3;&#x10;DsUj&#x87;wBæâ3ìùbÃÅG&#x8c;t&#x1c;­]Dk¯¡-Qb÷q4C$Z}&#x5;Só&#x97;ÉLòü&#x87;qÈ&#x1c;ù(&#xe;&#xb;üÕ þ¨&quot;ªÃüä&#x1f;)&#x88;ê0&#x13;7R&#x10;ÕanÊ&#x1f;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">&#x8;_&#x99;Å&#x97; B&#x92;Ò&#x3;&#x10;DsUj&#x87;wBæâ3ìùbÃÅG&#x8c;t&#x1c;­]Dk¯¡-Qb÷q4C$Z}&#x5;Só&#x97;ÉLòü&#x87;qÈ&#x1c;ù(&#xe;&#xb;üÕ þ¨&quot;ªÃüä&#x1f;)&#x88;ê0&#x13;7R&#x10;ÕanÊ&#x1f;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="îoaM#&#x0;&#x91;ÒÖ&#x83;&#x8b;o&#x95;ªQÈ&#x9c;Aì&#x19;¤Dß?¶&#x8a;û§³±ø X¡D&#xb;&#x95;h.&#x89;)ÃãJìÆcÜÁ&#xb;°QÝ&#xf;ZUµ¬Ë&apos;&#x11;&#x13;UHªã&gt;»&#x8c;q7&apos;þ+&#x8c;3s&#x90;&#x9d;SÃûOãÜ&#x9e;&#x1f;â©aVùjrØ&#x1c;%8¾&#x91;&#x9b;ä&#x93;¡K´r&#x98;\Ê&#x0;{2&#x7f;&#x8c;(Qá¾ZO&#x91;¯ê&#x98;Ë¯&#x9c;?&#x12;/Ö¯&quot;C:fìÕ&#x84;&#x9d;·aG¯»Ñë&#x1d;ìêÝ²A½Q)÷&#x98;n¯{°Ëß&#x1b;PJ&#x11;cºUú×û.¥&#x18;ð ¥º;&#x84;ï¿&#x14;2k&#x1e;¨t&#x17;£´lÍI&#xa;n&#x6;[u_\hC&#x10;&#x1c;&#x80;iî­Ã¦&#x81;&#x1d;þ&#x1e;&#x93;äó&#x1e;&#x84;&#xf;ÝãâYx&#x16;êOCê&#x4;,kª&#x1b;í&#x1e;*¯&#x13;%kEEOK&#x95;ySsW}}&#x9f;¸N°ôûËûk¥Q±Î*¬kòr&#x9d;&#x95;\½{Ó¨¯µ&#x89;³74nÝ!z&#x9a;MÎºm&#x95;&#x2;ï\ïjr·m,&#x19;´&#x6;üe½BË&#x80;&#x9f;&#x1f;&#xa;x6Új&#x84;zÉSQ&quot;µW&#x97;Yüõ&#x9b;ºkF6­¯©&#x11;í&#x95;Îávq°Ýl&#x19;iw6opwlu7»ëøagceu{OÏÖ&#x1e;&#x8f;»¹¥c&#x9b;¥¡³Þ³­&#x91;ïª&#xd;li&#xb;x|&#xd;MÝÕ%&#x82;ËÚÖ6P" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">îoaM#&#x0;&#x91;ÒÖ&#x83;&#x8b;o&#x95;ªQÈ&#x9c;Aì&#x19;¤Dß?¶&#x8a;û§³±ø X¡D&#xb;&#x95;h.&#x89;)ÃãJìÆcÜÁ&#xb;°QÝ&#xf;ZUµ¬Ë&apos;&#x11;&#x13;UHªã&gt;»&#x8c;q7&apos;þ+&#x8c;3s&#x90;&#x9d;SÃûOãÜ&#x9e;&#x1f;â©aVùjrØ&#x1c;%8¾&#x91;&#x9b;ä&#x93;¡K´r&#x98;\Ê&#x0;{2&#x7f;&#x8c;(Qá¾ZO&#x91;¯ê&#x98;Ë¯&#x9c;?&#x12;/Ö¯&quot;C:fìÕ&#x84;&#x9d;·aG¯»Ñë&#x1d;ìêÝ²A½Q)÷&#x98;n¯{°Ëß&#x1b;PJ&#x11;cºUú×û.¥&#x18;ð ¥º;&#x84;ï¿&#x14;2k&#x1e;¨t&#x17;£´lÍI
n&#x6;[u_\hC&#x10;&#x1c;&#x80;iî­Ã¦&#x81;&#x1d;þ&#x1e;&#x93;äó&#x1e;&#x84;&#xf;ÝãâYx&#x16;êOCê&#x4;,kª&#x1b;í&#x1e;*¯&#x13;%kEEOK&#x95;ySsW}}&#x9f;¸N°ôûËûk¥Q±Î*¬kòr&#x9d;&#x95;\½{Ó¨¯µ&#x89;³74nÝ!z&#x9a;MÎºm&#x95;&#x2;ï\ïjr·m,&#x19;´&#x6;üe½BË&#x80;&#x9f;&#x1f;
x6Új&#x84;zÉSQ&quot;µW&#x97;Yüõ&#x9b;ºkF6­¯©&#x11;í&#x95;Îávq°Ýl&#x19;iw6opwlu7»ëøagceu{OÏÖ&#x1e;&#x8f;»¹¥c&#x9b;¥¡³Þ³­&#x91;ïª&#xd;li&#xb;x|&#xd;MÝÕ%&#x82;ËÚÖ6P</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ù&lt;ü` v Ð¿Å^[V[ÝßßÀ&#x95;·13&#x89;&#x16;þ&#x7;¤ë&#x9a;¯U&#xc;&#x0;&#x0;" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ù&lt;ü` v Ð¿Å^[V[ÝßßÀ&#x95;·13&#x89;&#x16;þ&#x7;¤ë&#x9a;¯U&#xc;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="&#x1f;&#x8b;&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x3;¥V&#xf;l&#x13;×&#x19;&#x7f;ï&#x9d;ï|¾Ë&#x9f;KJèÅI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">&#x1f;&#x8b;&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x3;¥V&#xf;l&#x13;×&#x19;&#x7f;ï&#x9d;ï|¾Ë&#x9f;KJèÅI</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">hangouts/v1_meetings/media_sessions/callperf</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Encode-Response-If-Executable" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Encode-Response-If-Executable</stringProp>
                  <stringProp name="Header.value">base64</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">SAPISIDHASH 1640819510_043a347c2e0188c3291e001fa2e14f00c72fb70f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-protobuf</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Meeting-RtcClient" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Meeting-RtcClient</stringProp>
                  <stringProp name="Header.value">CAEQqgMYASABKAg=</stringProp>
                </elementProp>
                <elementProp name="X-Goog-AuthUser" elementType="Header">
                  <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://meet.google.com/hangouts/v1_meetings/media_sessions/query?key=AIzaSyCG_6Rm6c7ucLr2NwAq33-vluCp2VfSkf0&amp;alt=protojson" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[[[53],[&quot;boq_hlaneCE3E920D&quot;,null,null,&quot;boq_hlane_szBvtleUa9G&quot;],null,&quot;es&quot;,null,null,[1,426,1,1,8]],&quot;MAFKCqBuUInZH5GwRJw&quot;,[3,null,[&quot;AOIzluBI9a4CCmTE1ZRiJJp9K63qoBqHaz9I46KOe0fD0JcZzhUO08LMjy9dR-PIkD62PNbOcVY7t4soAn6Tro2usdY5G6JadC7aXFA3oJZlGxZNGG98DPvX9tX13xXPRSc_jcRcI2vPMDFXmmjmdcRT_k3LfJdkM2iHsgVsdhLOlF76b4VVrAahd2tsHrsqg8HAHFqqL0BV&quot;,1640819510186]]]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">hangouts/v1_meetings/media_sessions/query?key=AIzaSyCG_6Rm6c7ucLr2NwAq33-vluCp2VfSkf0&amp;alt=protojson</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">SAPISIDHASH 1640819513_c35aac21b66e562fbd5fd325711495e24cad12c4</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json+protobuf</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Meeting-RtcClient" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Meeting-RtcClient</stringProp>
                  <stringProp name="Header.value">CAEQqgMYASABKAg=</stringProp>
                </elementProp>
                <elementProp name="X-Goog-AuthUser" elementType="Header">
                  <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://meet.google.com/hangouts/v1_meetings/hangouts/bulk?key=AIzaSyCG_6Rm6c7ucLr2NwAq33-vluCp2VfSkf0&amp;alt=protojson" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[[[53],[&quot;boq_hlaneCE3E920D&quot;,null,null,&quot;boq_hlane_szBvtleUa9G&quot;],null,&quot;es&quot;,null,null,[1,426,1,1,8]],[[null,null,null,[null,1,&quot;MAFKCqBuUInZH5GwRJw&quot;,&quot;m-y1BBOvoftuTSqhR36pYKIQ&quot;,[420048846947339]]],[null,null,null,[null,2,&quot;MAFKCqBuUInZH5GwRJw&quot;,&quot;m-y1BBOvoftuTSqhR36pYKIQ&quot;,[420048846947345]]]],[null,null,[&quot;AOIzluBI9a4CCmTE1ZRiJJp9K63qoBqHaz9I46KOe0fD0JcZzhUO08LMjy9dR-PIkD62PNbOcVY7t4soAn6Tro2usdY5G6JadC7aXFA3oJZlGxZNGG98DPvX9tX13xXPRSc_jcRcI2vPMDFXmmjmdcRT_k3LfJdkM2iHsgVsdhLOlF76b4VVrAahd2tsHrsqg8HAHFqqL0BV&quot;,1640819510186]]]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">hangouts/v1_meetings/hangouts/bulk?key=AIzaSyCG_6Rm6c7ucLr2NwAq33-vluCp2VfSkf0&amp;alt=protojson</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">SAPISIDHASH 1640819513_c35aac21b66e562fbd5fd325711495e24cad12c4</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json+protobuf</stringProp>
                </elementProp>
                <elementProp name="X-Goog-Meeting-RtcClient" elementType="Header">
                  <stringProp name="Header.name">X-Goog-Meeting-RtcClient</stringProp>
                  <stringProp name="Header.value">CAEQqgMYASABKAg=</stringProp>
                </elementProp>
                <elementProp name="X-Goog-AuthUser" elementType="Header">
                  <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://mercatec.com.co/iniciar-sesion?back=my-account" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="back" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">back</stringProp>
                  <stringProp name="Argument.value">my-account</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">JHONrojas1234</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="submitLogin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">submitLogin</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="back" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">back</stringProp>
                  <stringProp name="Argument.value">my-account</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                  <stringProp name="Argument.value">jhrojas41@misena.edu.co</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">iniciar-sesion</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>0.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="cierre-sesion" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://mercatec.com.co/?mylogout=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mylogout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mylogout</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>22795.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">11397.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 22795 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
